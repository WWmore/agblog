I"<h3 id="数组nparray的copy">数组np.array的copy</h3>
<pre><code class="language-Python">np.copy
</code></pre>

<h3 id="列表list的copy">列表list的copy</h3>
<blockquote>
  <p>Python中的对象之间赋值时是按引用传递的，如果需要拷贝对象，需要使用标准库中的copy模块。</p>
</blockquote>

<blockquote>

  <ol>
    <li>copy.copy 浅拷贝 只拷贝父对象，不会拷贝对象的内部的子对象。</li>
    <li>copy.deepcopy 深拷贝 拷贝对象及其子对象</li>
  </ol>
</blockquote>

<pre><code class="language-Python">&gt;&gt;&gt; import copy
&gt;&gt;&gt; a = [1,2,3,4,['a','b']]           # 原始对象
&gt;&gt;&gt; b = a                             # 赋值，传对象的引用
&gt;&gt;&gt; c = copy.copy(a)                  # 浅copy
&gt;&gt;&gt; d = copy.deepcopy(a)              # 深copy
&gt;&gt;&gt; a.append(5)
&gt;&gt;&gt; a[4].append('c')
&gt;&gt;&gt; print 'a=',a
a= [1, 2, 3, 4, ['a', 'b', 'c'], 5]   # 内外层数据均修改
&gt;&gt;&gt; print 'b=',b
b= [1, 2, 3, 4, ['a', 'b', 'c'], 5]   # 内外层数据均修改
&gt;&gt;&gt; print 'c=',c
c= [1, 2, 3, 4, ['a', 'b', 'c']]      # 浅copy，内层数据被修改
&gt;&gt;&gt; print 'd=',d
d= [1, 2, 3, 4, ['a', 'b']]           # 深copy，均不受影响
</code></pre>
:ET